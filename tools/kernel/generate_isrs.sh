#!/usr/bin/bash
set -e 				# Fail globally

# Print usage
if [ $# -le 1 ]; then
	echo "Usage: generate_isrs.sh <arch> <isrs_gen.c> <isrs_gen.asm.inc>"
	echo "Avaiable architectures:"
	echo " i686"
	exit 1
fi

# Variables
ISRS_ARCH=$1
ISRS_GEN_C=$2
ISRS_GEN_ASM=$3
ISRS_WITH_ERROR_CODE="8 10 11 12 13 14 17 21 29 30"

# Make output directories
ISRS_DIR_GEN_C=$(dirname "$ISRS_GEN_C")
ISRS_DIR_GEN_ASM=$(dirname "$ISRS_GEN_ASM")
mkdir -p "$ISRS_DIR_GEN_C"
mkdir -p "$ISRS_DIR_GEN_ASM"

#
# Generate C file
#
echo "//" > $ISRS_GEN_C
echo "// !!! THIS FILE IS AUTOGENERATED !!!" > $ISRS_GEN_C
echo "//" > $ISRS_GEN_C
echo "#include \"arch/${ISRS_ARCH}/idt.h\"" >> $ISRS_GEN_C
echo "#include \"arch/${ISRS_ARCH}/gdt.h\"" >> $ISRS_GEN_C

echo "" >> $ISRS_GEN_C
echo "//" >> $ISRS_GEN_C
echo "// ISRs stubs" >> $ISRS_GEN_C
echo "//" >> $ISRS_GEN_C
for index in $( seq 0 255 ); do
    echo "void ${ISRS_ARCH}_isr_stub_${index}();" >> $ISRS_GEN_C
done

echo "" >> $ISRS_GEN_C
echo "//" >> $ISRS_GEN_C
echo "// ISR gates initialize" >> $ISRS_GEN_C
echo "//" >> $ISRS_GEN_C
echo "void i686_isr_gates_init()" >> $ISRS_GEN_C
echo "{" >> $ISRS_GEN_C
for index in $( seq 0 255 ); do
	echo "    i686_idt_set_gate( ${index}, i686_isr_stub_${index}, GDT_KERNEL_CODE_SEGMENT, IDT_FLAG_RING0 | IDT_FLAG_GATE_32_64BIT_INTERRUPT );" >> $ISRS_GEN_C
done
echo "}" >> $ISRS_GEN_C

#
# Generate assembly file
#
echo ";" > $ISRS_GEN_ASM
echo "; !!! THIS FILE IS AUTOGENERATED !!!" > $ISRS_GEN_ASM
echo ";" > $ISRS_GEN_ASM
for index in $( seq 0 255 ); do
    if echo "$ISRS_WITH_ERROR_CODE" | grep -q "\b${index}\b"; then
        echo "ISR_ERROR_STUB ${index}" >> $ISRS_GEN_ASM
    else
        echo "ISR_NOERROR_STUB ${index}" >> $ISRS_GEN_ASM
    fi
done
